package com.mrhid6.gameengine.obj;

import org.lwjgl.opengl.GL11;


//import java.nio.IntBuffer;

/**
 * $Id$
 * <p>
 * Simple Texture containing the texture ID generated by OGL
 * and various attributes. Can be called upon to bind and paint itself.
 * <br/>
 * This is a modified version of the Texture class from: org.lwjgl.examples.spaceinvaders.Texture
 * </p>
 * @author Brian Matzon <brian@matzon.dk>
 * @version $Revision$
 */
public class Texture {

	/** Height of this image */
	private int height;

	/** Height ratio */
	private float	heightRatio;

	/** Texture heigth */
	private int textureHeigth;

	/** Texture id for this image (OpenGL) */
	private int textureID;

	/** Texture width */
	private int textureWidth;

	/** Width of this image */
	private int width;

	/** Width ratio */
	private float	widthRatio;



	/**
	 * Creates a new Texture
	 * 
	 * @param textureID Texture ID
	 * @param width Width of image
	 * @param height Height of image
	 */
	public Texture(int textureID, int width, int height) {
		this(textureID, width, height, 1.0f, 1.0f, width, height);
	}

	/**
	 * Creates a new Texture
	 * 
	 * @param textureID Texture ID
	 * @param width Width of image
	 * @param height Height of image
	 * @param widthRatio Ratio of texture width
	 * @param heightRatio Ratio of texture height
	 * @param textureWidth Actual width of texture
	 * @param textureHeight Actual height of texture
	 */
	public Texture(int textureID, int width, int height, float widthRatio, float heightRatio, int textureWidth, int textureHeight) {
		this.textureID = textureID;
		this.width = width;
		this.height = height;
		this.widthRatio = widthRatio;
		this.heightRatio = heightRatio;
		this.textureWidth = textureWidth;
		this.textureHeigth = textureHeight;
	}

	/**
	 * Destroys this Texture, reclaiming all resources
	 */
	/*public void destroy() {
    IntBuffer scratch = BufferUtils.createIntBuffer(1);
    scratch.put(0, textureID);
    GL11.glDeleteTextures(scratch);
  }*/

	/**
	 * @return height of image
	 */
	public int getHeight() {
		return height;
	}
	/**
	 * @return Texture ID for this image
	 */
	public int getTextureID() {
		return textureID;
	}
	/**
	 * @return width of image
	 */
	public int getWidth() {
		return width;
	}
	/**
	 * Binds this image
	 */
	/*public void bind() {
    GL11.glBindTexture(GL11.GL_TEXTURE_2D, textureID);
  }*/

	/**
	 * Renders this image to a quad. The image will bind itself first.
	 */
	/*  public void render() {
	  int ratio = 40;
    bind();
    GL11.glBegin(GL11.GL_QUADS);
    {
      GL11.glTexCoord2f(0.0f, 0.0f);              GL11.glVertex2i(0, 0);
      GL11.glTexCoord2f(widthRatio, 0.0f);        GL11.glVertex2i(width/ratio, 0);
      GL11.glTexCoord2f(widthRatio, heightRatio); GL11.glVertex2i(width/ratio, height/ratio);
      GL11.glTexCoord2f(0.0f, heightRatio);       GL11.glVertex2i(0, height/ratio);
    }
    GL11.glEnd();
  }*/

	/**
	 * Returns a string representation of the image
	 */
	@Override
	public String toString() {
		return "Texture [" + textureID + ", " + width + ", " + height + ", " + 
				textureWidth + ", " + textureHeigth + ", " + widthRatio + ", " + heightRatio + "]";
	}

	public void bind() {
		GL11.glBindTexture(GL11.GL_TEXTURE_2D, getTextureID());

	}
}